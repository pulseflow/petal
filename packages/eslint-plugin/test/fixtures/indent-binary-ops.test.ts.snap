// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`indent-binary-ops > invalid > 
  function isNamedFunction(node:
  | Tree.ArrowFunctionExpression
  | Tree.FunctionDeclaration
  | Tree.FunctionExpression,
  ) {
    if (node.id)
      return true

    const parent = node.parent

    return parent.type === 'MethodDefinition'
              || (parent.type === 'Property'
                  && (
                    parent.kind === 'get'
                      || parent.kind === 'set'
                      || parent.method
                  )
              )
  }
 1`] = `
"
  function isNamedFunction(node:
    | Tree.ArrowFunctionExpression
    | Tree.FunctionDeclaration
    | Tree.FunctionExpression,
  ) {
    if (node.id)
      return true

    const parent = node.parent

    return parent.type === 'MethodDefinition'
      || (parent.type === 'Property'
      && (
                    parent.kind === 'get'
                    || parent.kind === 'set'
                      || parent.method
                  )
              )
  }
"
`;

exports[`indent-binary-ops > invalid > 
const a =
x +
   y * z
 1`] = `
"
const a =
x +
y * z
"
`;

exports[`indent-binary-ops > invalid > 
function foo() {
  if (a
  || b
      || c || d
        || (d && b)
  ) {
    foo()
  }
}
 1`] = `
"
function foo() {
  if (a
    || b
  || c || d
      || (d && b)
  ) {
    foo()
  }
}
"
`;

exports[`indent-binary-ops > invalid > 
if (
  a && (
    a.b ||
      a.c
  ) &&
    a.d
) {}
 1`] = `
"
if (
  a && (
    a.b ||
    a.c
  ) &&
  a.d
) {}
"
`;

exports[`indent-binary-ops > invalid > 
if (
  aaaaaa >
bbbbb
) {}
 1`] = `
"
if (
  aaaaaa >
  bbbbb
) {}
"
`;

exports[`indent-binary-ops > invalid > 
type Foo = Merge<
    A 
  & B
    & C
> 1`] = `
"
type Foo = Merge<
  A 
  & B
  & C
>"
`;

exports[`indent-binary-ops > invalid >  
function TSPropertySignatureToProperty(
  node: 
  | TSESTree.TSEnumMember
    | TSESTree.TSPropertySignature
  | TSESTree.TypeElement,
  type: 
  | AST_NODE_TYPES.Property
    | AST_NODE_TYPES.PropertyDefinition = AST_NODE_TYPES.Property,
): TSESTree.Node | null {} 1`] = `
" 
function TSPropertySignatureToProperty(
  node: 
    | TSESTree.TSEnumMember
    | TSESTree.TSPropertySignature
    | TSESTree.TypeElement,
  type: 
    | AST_NODE_TYPES.Property
    | AST_NODE_TYPES.PropertyDefinition = AST_NODE_TYPES.Property,
): TSESTree.Node | null {}"
`;

exports[`indent-binary-ops > invalid > type Foo = 
  | A | C
    | B
 1`] = `
"type Foo = 
  | A | C
  | B
"
`;

exports[`indent-binary-ops > invalid > type Foo = A | B
| C | D
  | E 1`] = `
"type Foo = A | B
  | C | D
  | E"
`;

exports[`indent-binary-ops > invalid > type T =
& A
  & (B
  | A
  | D) 1`] = `
"type T =
  & A
  & (B
  | A
  | D)"
`;

exports[`indent-binary-ops > invalid > type T = 
  a 
  | b 
    | c 1`] = `
"type T = 
  a 
  | b 
  | c"
`;
