name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  merge_group:
  pull_request:
    paths-ignore:
      - '.vscode/**'
      - '**/*.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash

jobs:
  build:
    name: 'Build and Test: ${{matrix.os}} (node@${{ matrix.NODE_VERSION }})'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 25
    strategy:
      matrix:
        OS: [ubuntu-latest, windows-latest]
        NODE_VERSION: ['lts/*']
      fail-fast: true
    steps:
      - name: disable git crlf
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: checkout
        uses: actions/checkout@v4

      - name: setup pnpm
        uses: pnpm/action-setup@v4

      - name: setup node@${{ matrix.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.NODE_VERSION }}
          cache: pnpm

      - name: install dependencies
        run: pnpm install

      - name: build packages
        if: ${{ matrix.os == 'ubuntu-latest' && github.repository_owner == 'pulseflow' }}
        run: pnpm build

      - name: test packages
        run: pnpm test

  lint:
    name: 'Lint: ubuntu-latest (node@20)'
    runs-on: ubuntu-latest
    timeout-minutes: 7
    needs: build
    steps:
      - name: disable git crlf
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: checkout
        uses: actions/checkout@v4

      - name: setup pnpm
        uses: pnpm/action-setup@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: install dependencies
        run: pnpm install

      - name: lint and format
        run: pnpm lint
